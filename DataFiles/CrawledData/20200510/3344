https://bits.lab.uic.edu/projects/cache-efficient-index-access-for-large-in-memory-datasets
Cache-efficient index access for large in-memory datasets | Bits Lab | University of Illinois at Chicago                        Skip to the content of this page ,  the main menu , the secondary menu , the site search form , the site home page .        UIC Logo        Bits Lab     Search the site     Toggle Menu      Search                  UIC Logo          Bits Lab      Bits Lab   Main Menu    Home    Sample Projects    Expand Sample Projects menu           Deterministic Multithreading    Delegation for Efficient Multi-Threading    Congestion control for RDMA    Tail Latency in Datacenters    Cache-efficient index access for large in-memory datasets    Vehicle Counting    Cloudsweeper         Publications    Join BITS Lab    People    Contact     Eyebrow menu    Department of Computer Science    College of Engineering    UIC menu    UIC.edu    Campus Map       Search                 View Menu  Down arrow icon            Breadcrumbs   Bits Lab    Sample Projects    Cache-efficient index access for large in-memory datasets        Cache-efficient index access for large in-memory datasets  Many important applications, such as key-value caches and in-memory databases, can service requests at extremely high speed (e.g., 50 million req/sec), which is made possible by hosting all data in main memory and delivering them over fast network. These applications rely on index structures to organize their data. As the index has to be traversed for each request before the target data can be located, the efficiency of index access is performance-critical. Unfortunately, the index can be too large for the CPU cache even with a moderate dataset. What’s worse, the target dataset’s temporal access locality can be compromised by index walks and the spatial locality can also be compromised if hashing is used. While it only takes one sequential memory access to reach the target data, the index traversal can induce tens, sometimes hundreds of LLC misses. Consequently, these applications have to spend a majority of their time on index access instead of delivering the target data over the network, resulting in compromised performance.  Our efforts on improving index access in data-intensive applications:  We design a software-defined cache to selectively cache the target entries in indexes, which allows the index traversal to be bypassed when accessing the most frequently accessed items. We name this cache Search Lookaside Buffer, or SLB (2017 Symposium on Cloud Computing).  We propose a new ordered index structure, named Wormhole, that has a very low asymptotic lookup cost (O(log L), where L is the length of the key). The low cost is achieved by simultaneously leveraging strengths of three index structures, namely hash table, prefix tree, and B+ tree, to orchestrate a single fast ordered index.       Project Members        User icon        Xingbo Wu        User icon        Fan Ni        User icon        Song Jiang         SoCC 2017 Search lookaside buffer: efficient caching for index data structures           Paper Details             Full Paper          Wormhole: A Fast Ordered Index for In-memory Data Management           Paper Details             Full Paper              Sample Projects    Back to main content           Deterministic Multithreading    Delegation for Efficient Multi-Threading    Congestion control for RDMA    Tail Latency in Datacenters    Cache-efficient index access for large in-memory datasets    Vehicle Counting    Cloudsweeper                   UIC Logo         Computer  Science  College of  Engineering         Contact   jakob@uic.edu        Social Media Accounts            UIC.edu links   UIC.edu  Academic Calendar  Athletics  Campus Directory  Disability Resources  Emergency Information  Event Calendar  Job Openings  Library  Maps  UIC Safe Mobile App  UIC Today  UI Health  Veterans Affairs        Powered by Red 2.38.0  © 2020 The Board of Trustees of the University of Illinois |  Privacy Statement    Campuses   University of Illinois System  Urbana-Champaign  Springfield      Cookie Settings                 